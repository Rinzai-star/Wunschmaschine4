import streamlit as st
import pandas as pd
from io import BytesIO

class Wunschmaschine:
    def __init__(self):
        self.ziel = ""
        self.essenz_check = ""
        self.kausal_check = ""
        self.energie_check = ""
        self.physisch_check = ""
        self.hoeheres_selbst = ""
        self.blockaden = ""
        self.ergebnis = ""
        self.reflexionen = {}
        self.todo_liste = []
    
    def ziel_eingeben(self):
        self.ziel = st.text_input("Was m√∂chtest du manifestieren?")
    
    def frage_mit_reflexion(self, frage, key):
        antwort = st.radio(frage, ("Ja", "Nein", "Ich wei√ü es nicht"), key=key)
        if antwort == "Ja":
            self.reflexionen[key] = "‚úÖ Alles im Einklang."
        elif antwort == "Nein":
            self.reflexionen[key] = "‚ö†Ô∏è Hier gibt es Blockaden. √úberdenke dies."
            selbst_reflexion = st.text_area(f"Was h√§lt dich hier zur√ºck? (Notizen f√ºr dich)", key=f"notiz_{key}")
            self.reflexionen[key] += f"\n{selbst_reflexion}"
        else:
            self.reflexionen[key] = "‚ùì Du bist unsicher."
            ind_reflexion = st.text_area(f"Gibt es Aspekte, die zuerst gekl√§rt werden m√ºssen?", key=f"ind_notiz_{key}")
            self.reflexionen[key] += f"\n{ind_reflexion}"
    
    def manifestationsprozess(self):
        st.title("‚ú® Wunschmaschine ‚ú®")
        self.ziel_eingeben()
        if self.ziel:
            self.frage_mit_reflexion("Essenz-Ebene: Entspricht dein Wunsch wirklich deinem h√∂chsten Selbst?", "essenz")
            self.frage_mit_reflexion("Kausale Ebene: Glaubst du zu 100%, dass dein Wunsch m√∂glich ist?", "kausal")
            self.frage_mit_reflexion("Energie-Ebene: F√ºhlst du dich bereits so, als w√§re dein Wunsch erf√ºllt?", "energie")
            self.frage_mit_reflexion("Physische Ebene: Hast du bereits konkrete Handlungen unternommen?", "physisch")
            self.frage_mit_reflexion("H√∂heres Selbst: Vertraust du dem Universum und deiner F√ºhrung?", "hoeheres_selbst")

            if "‚ö†Ô∏è" not in " ".join(self.reflexionen.values()):
                self.ergebnis = "üåü Dein Ziel ist im vollst√§ndigen Alignment! Es wird sich schnell materialisieren. üåü"
            else:
                self.ergebnis = "üîç Es gibt Blockaden. Arbeite an diesen Themen f√ºr eine schnellere Manifestation."
                self.todo_liste = [f"üìå {key}: {val}" for key, val in self.reflexionen.items() if "‚ö†Ô∏è" in val or "‚ùì" in val]
            
            st.subheader("--- WUNSCHMASCHINEN-ANALYSE ---")
            st.write(f"üéØ Ziel: {self.ziel}")
            for key, val in self.reflexionen.items():
                st.write(val)
            
            st.success(self.ergebnis)
            if self.todo_liste:
                st.subheader("üìù Dein Handlungsplan:")
                for item in self.todo_liste:
                    st.write(item)
                
            self.download_protokoll()
    
    def download_protokoll(self):
        protokoll = f"Ziel: {self.ziel}\n\n"
        for key, val in self.reflexionen.items():
            protokoll += f"{key.capitalize()}: {val}\n\n"
        protokoll += f"Ergebnis: {self.ergebnis}\n\n"
        if self.todo_liste:
            protokoll += "To-Do-Liste:\n"
            for item in self.todo_liste:
                protokoll += f"- {item}\n"
        
        buffer = BytesIO()
        buffer.write(protokoll.encode())
        buffer.seek(0)
        st.download_button("üìÑ Protokoll als PDF herunterladen", buffer, file_name="Wunschmaschine_Protokoll.txt")

if __name__ == "__main__":
    tool = Wunschmaschine()
    tool.manifestationsprozess()

